name: build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Build Check Test
    runs-on: ubuntu-latest
    steps:
    - name: Use Temporary Disk as Docker Path
      run: |
        sudo service docker stop
        cd /var/lib
        sudo rm -rf docker
    - name: Maximize build space
      uses: easimon/maximize-build-space@fc881a613ad2a34aca9c9624518214ebc21dfc0c #v10
      with:
        root-reserve-mb: 20240
        swap-size-mb: 1024
        build-mount-path: '/var/lib/docker'
    - name: Restart Docker
      run: |
        sudo service docker start
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
    - name: Docker Build Test
      run: |
        bash dockerbuild.sh
    - name: Test AVM image with AVM modules
      run: |
        has_error=false
        bash test-avm-module.sh https://github.com/Azure/terraform-azurerm-avm-res-keyvault-vault.git terraform-azurerm-avm-res-keyvault-vault || has_error=true
        bash test-avm-module.sh https://github.com/Azure/terraform-azurerm-avm-res-app-containerapp.git terraform-azurerm-avm-res-app-containerapp || has_error=true
        if [ "$has_error" = true ]; then
          echo "AVM module tests failed, but it might be as expected, eg: new files added."
          exit 1
        else
          echo "AVM module tests passed"
        fi
    - name: Run Trivy vulnerability scanner against full image
      env:
        TRIVY_DB_REPOSITORY: 'ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db'
        TRIVY_JAVA_DB_REPOSITORY: 'ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db'
      uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
      with:
        image-ref: 'localrunner'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'
        trivyignores: '.trivyignore'
        timeout: '120m'
        scanners: 'vuln'
    - name: Run Trivy vulnerability scanner against AVM image
      env:
        TRIVY_DB_REPOSITORY: 'ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db'
        TRIVY_JAVA_DB_REPOSITORY: 'ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db'
      uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37 # 0.31.0
      with:
        image-ref: 'localrunner_avm'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'
        trivyignores: '.trivyignore'
        timeout: '120m'
        scanners: 'vuln'
